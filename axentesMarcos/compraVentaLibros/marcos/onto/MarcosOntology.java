// file: MarcosOntology.java generated by ontology bean generator.  DO NOT EDIT, UNLESS YOU ARE REALLY SURE WHAT YOU ARE DOING!
package axentesMarcos.compraVentaLibros.marcos.onto;

import jade.content.onto.*;
import jade.content.schema.*;

/** file: MarcosOntology.java
 * @author OntologyBeanGenerator v4.1
 * @version 2017/04/28, 20:11:32
 */
public class MarcosOntology extends jade.content.onto.Ontology  {

  private static final long serialVersionUID = 6879412765850074215L;

  //NAME
  public static final String ONTOLOGY_NAME = "marcos";
  // The singleton instance of this ontology
  private static Ontology theInstance = new MarcosOntology();
  public static Ontology getInstance() {
     return theInstance;
  }


   // VOCABULARY
    public static final String ANUNCIAR_ANUNCIO="anuncio";
    public static final String ANUNCIAR="Anunciar";
    public static final String OFERTAR_OFERTA="oferta";
    public static final String OFERTAR="Ofertar";
    public static final String PEDIR_LIBROPEDIDO="libroPedido";
    public static final String PEDIR="Pedir";
    public static final String LIBRO_TITULO="titulo";
    public static final String LIBRO="Libro";
    public static final String ANUNCIO_LIBROANUNCIADO="libroAnunciado";
    public static final String ANUNCIO_PRECIOANUNCIADO="precioAnunciado";
    public static final String ANUNCIO_GANADORES="ganadores";
    public static final String ANUNCIO="Anuncio";
    public static final String PETICION_LIBRO="libro";
    public static final String PETICION_PRECIO="precio";
    public static final String PETICION="Peticion";
    public static final String OFERTA_PRECIOOFERTA="precioOferta";
    public static final String OFERTA_LIBROOFERTADO="libroOfertado";
    public static final String OFERTA="Oferta";

  /**
   * Constructor
  */
  private MarcosOntology(){ 
    super(ONTOLOGY_NAME, BasicOntology.getInstance());
    try { 

    // adding Concept(s)
    ConceptSchema ofertaSchema = new ConceptSchema(OFERTA);
    add(ofertaSchema, axentesMarcos.compraVentaLibros.marcos.onto.Oferta.class);
    ConceptSchema peticionSchema = new ConceptSchema(PETICION);
    add(peticionSchema, axentesMarcos.compraVentaLibros.marcos.onto.Peticion.class);
    ConceptSchema anuncioSchema = new ConceptSchema(ANUNCIO);
    add(anuncioSchema, axentesMarcos.compraVentaLibros.marcos.onto.Anuncio.class);
    ConceptSchema libroSchema = new ConceptSchema(LIBRO);
    add(libroSchema, axentesMarcos.compraVentaLibros.marcos.onto.Libro.class);

    // adding AgentAction(s)
    AgentActionSchema pedirSchema = new AgentActionSchema(PEDIR);
    add(pedirSchema, axentesMarcos.compraVentaLibros.marcos.onto.Pedir.class);
    AgentActionSchema ofertarSchema = new AgentActionSchema(OFERTAR);
    add(ofertarSchema, axentesMarcos.compraVentaLibros.marcos.onto.Ofertar.class);
    AgentActionSchema anunciarSchema = new AgentActionSchema(ANUNCIAR);
    add(anunciarSchema, axentesMarcos.compraVentaLibros.marcos.onto.Anunciar.class);

    // adding AID(s)

    // adding Predicate(s)


    // adding fields
    ofertaSchema.add(OFERTA_LIBROOFERTADO, libroSchema, ObjectSchema.MANDATORY);
    ofertaSchema.add(OFERTA_PRECIOOFERTA, (TermSchema)getSchema(BasicOntology.INTEGER), ObjectSchema.MANDATORY);
    peticionSchema.add(PETICION_PRECIO, (TermSchema)getSchema(BasicOntology.INTEGER), ObjectSchema.MANDATORY);
    peticionSchema.add(PETICION_LIBRO, libroSchema, ObjectSchema.MANDATORY);
    anuncioSchema.add(ANUNCIO_GANADORES, (TermSchema)getSchema(BasicOntology.STRING), ObjectSchema.MANDATORY);
    anuncioSchema.add(ANUNCIO_PRECIOANUNCIADO, (TermSchema)getSchema(BasicOntology.INTEGER), ObjectSchema.MANDATORY);
    anuncioSchema.add(ANUNCIO_LIBROANUNCIADO, libroSchema, ObjectSchema.MANDATORY);
    libroSchema.add(LIBRO_TITULO, (TermSchema)getSchema(BasicOntology.STRING), ObjectSchema.MANDATORY);
    pedirSchema.add(PEDIR_LIBROPEDIDO, peticionSchema, ObjectSchema.MANDATORY);
    ofertarSchema.add(OFERTAR_OFERTA, ofertaSchema, ObjectSchema.MANDATORY);
    anunciarSchema.add(ANUNCIAR_ANUNCIO, anuncioSchema, ObjectSchema.MANDATORY);

    // adding name mappings

    // adding inheritance

   }catch (java.lang.Exception e) {e.printStackTrace();}
  }
}
